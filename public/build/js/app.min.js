//= ./app.module.js

/**
 * Created by krek on 01.08.17.
 */
angular
    .module('auth', []);

var app = angular
            .module('blog', ['ui.router', 'ngMessages', 'LocalStorageModule', 'ngMaterial', 'auth'])
            .run(function () {

            });
angular
    .module('blog')
    .config(function($stateProvider, $urlRouterProvider) {
        let mainState = {
                name: 'main',
                url: '/',
                component: 'blogList',
                resolve: {
                    items: function(BlogService) {
                        return BlogService.getAllPosts();
                    }
                }
            },
            auth = {
                name: 'auth',
                url: '/auth',
                component: 'auth',
            },
            blogState = {
                name: 'blog',
                url: '/blog/{itemId}',
                component: 'blogItem',
                resolve: {
                    post: function(BlogService, $transition$) {
                        console.log($transition$.params().itemId);
                        return BlogService.getPost($transition$.params().itemId);
                    }
                }
            },
            state404 = {
                name: '404',
                url: '/404',
                templateUrl: '/404.html'
            };


        $stateProvider.state(blogListState);
        $stateProvider.state(mainState);
        $stateProvider.state(blogState);
        $stateProvider.state(state404);
        $stateProvider.state(auth);

    })
angular
    .module('auth')

    .component('auth', {
        templateUrl: './js/app/auth/auth.tmpl.html',
        controller: authController,
    });

function authController($scope, authService, $state) {
    var $ctrl = this;

    $ctrl.$onInit = onInit;
    $ctrl.login = login;
    $ctrl.logout = logout;
    $ctrl.registration = registration;
    $ctrl.authMessage = '';
    $ctrl.regMessage = '';

    console.log($ctrl);

    function onInit() {
        "use strict";
        console.log(authService.status);
    }

    function login() {
        "use strict";
        var email = $ctrl.formData.authForm.email,
            password = $ctrl.formData.authForm.password;

        authService.authUser(email, password)
            .then(function() {
                $state.go('main');
            })
            .catch(function (err) {
                $ctrl.authMessage = err.data.message;
            });
    }

    function logout() {
        "use strict";
        authService.logout();
    }

    function registration() {
        "use strict";
        var email = $ctrl.formData.registrationForm.email,
            password = $ctrl.formData.registrationForm.password;

        console.log(authService.registerUser(email, password));
    }
}

/**
 * Created by krek on 08.08.17.
 */


angular
    .module('blog')

    .component('blogHeader', {
        templateUrl: './js/app/header/header.tmpl.html',
        controller: headerController
    });

function headerController($scope, authService) {
    let $ctrl = this;
    $ctrl.authService = authService;
    $ctrl.status = $ctrl.authService.status;
    $ctrl.email = $ctrl.status.authorization ? authService.getProfileData().email : '';

    $ctrl.logout = logout;


    $scope.$watch('$ctrl.status.authorization', checkAuth);

    function checkAuth(newValue, oldValue, scope) {
        "use strict";
        if (newValue) {
            $ctrl.email = authService.getProfileData().email;
        }
    }

    function logout () {
        "use strict";
        authService.logout();
    }
}


angular
    .module('auth')

    .service('authService', authService);


function authService($http, $q, $rootScope, localStorageService) {
    "use strict";
    var _self = this;

    _self.status = {
        authorization: isAuth(),
    };

    _self.registerUser = registerUser;
    _self.authUser = authUser;
    _self.logout = logout;

    _self.setProfileData = setProfileData;
    _self.getProfileData = getProfileData;
    _self.removeProfileData = removeProfileData;

    return _self;

    function isAuth() {
        return getProfileData() ? true : false;
    }

    function registerUser(email, password) {
        var deffered = $q.defer();
        $http
            .post("//localhost:3000/api/auth/signup", {
                email: email,
                password: password
            })
            .then(function (res) {
                deffered.resolve(authUser(email, password));

            }, function (err) {
                deffered.reject(err.status);
            });

        return deffered.promise;
    };

    function authUser(email, password) {
        "use strict";
        var deffered = $q.defer();
        $http
            .post("//localhost:3000/api/auth/signin", {
                email: email,
                password: password
            })
            .then(function (res) {
                var data = {
                    token: res.data.token,
                    email: res.config.data.email
                }
                setProfileData(data);
                _self.status.authorization = true;
                console.log(_self.status.authorization);
                deffered.resolve();
            }, function (err) {
                deffered.reject(err);
            });

        return deffered.promise;
    }

    function logout() {
        "use strict";
        $http
            .post("http://localhost:3000/api/auth/logout", {}, {
                headers: {
                    'Token': getProfileData().token
                }
            })
            .then(function (res) {
                    removeProfileData();
                    _self.status.authorization = false;
                },
                function (err) {
                    console.log(err);
                })
    }

    function setProfileData(data) {
        return localStorageService.set('blogData', data);
    }

    function getProfileData() {
        return localStorageService.get('blogData');
    }

    function removeProfileData() {
        return localStorageService.remove('blogData');
    }

}



angular
    .module('auth')
    .directive('checkEmail', function ($http, $q) {
        "use strict";
        return {
            require: 'ngModel',
            restrict: 'A',
            link: link
        }

        function link(scope, elem, attrs, ngModel) {
            ngModel.$asyncValidators.emailExist = emailExist;


            function emailExist(modelValue, viewValue) {
                return $http.get('//localhost:3000/api/auth/check/' + viewValue)
                    .then(function (response) {
                        if (response.data.status == 200) {
                            return true;
                        } else {
                            $q.reject(response.data.status);
                        }
                    });
            }
        }
    })
angular
    .module('auth')
    .directive('pwdCheck', function() {
        "use strict";
        return {
            require: 'ngModel',
            restrict: 'A',
            scope: {
                passwordValue: '=pwdCheck'
            },
            link: link
        }

        function link (scope, element, attrs, ngModel) {
            ngModel.$validators.pwdCheck = pwdCheck;
            scope.$watch('passwordValue', watch);

            function pwdCheck(modelValue) {
                return modelValue === scope.passwordValue;
            }


            function watch() {
                ngModel.$validate();
            }
        }

    })
//# sourceMappingURL=data:application/json;base64,
